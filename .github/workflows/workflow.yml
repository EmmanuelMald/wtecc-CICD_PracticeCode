name: CI workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs: 
  build:
    runs-on: ubuntu-latest
    container: python:3.9-slim

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

# flake8 is checking your code for syntactical and stylistic issues.
# some examples are:
  # line spacing
  # using spaces or tabs for identation
  # location uninitialized or undefined variables
  # missing parenthesis

  # flake8 is installed in the requirements.txt
        # --count: shows the count of all warnings and errors in the 
        #           result of the command 

        # --select=E9,F63,F7,F82: limits the checks to syntax errors

        # --show-source: adds the actual line number where the error/warning is found

        # statistics: shows the count of each type of error and warning in the result 

        # the second command will run all the available checks on the service
        # folder of your repository
      
      - name: Lint with flake8
        run: |
          flake8 service --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 service --count --max-complexity=10 --max-line-length=127 --statistics

    #Test code coverage with nosetests

    # Use nose to unit test the source code. Nose is configured via the included 
    # setup.cfg file to automatically include the flags -with-spec
    # and -spec-color so that red-green-refactor is meaningful. If you are in a command shell that
    # supports colors, passing tests will be green and failing test will be red

    # Nose is also configured to automaticallu run the coverage tool, and you should see a percentage of 
    # coverage report at the end of your tests

      - name: Run unit tests with nose
        run: |
          nosetests -v --with-spec --spec-color --with-coverage --cover-package=app
        